
#ifndef IEEE_LOWSN_DEFS_H
#define IEEE_LOWSN_DEFS_H
//IEEE 802.15.4 Frame definitions here

#define LOWSN_BCAST_SADDR       0xFFFF
#define LOWSN_BCAST_PANID       0xFFFF
#define LOWSN_SADDR_USE_LADDR   0xFFFE

#define LOWSN_ACKFRAME_LENGTH 5

#define LOWSN_MAX_MACHDR_LENGTH 23
#define LOWSN_MAX_NETHDR_LENGTH 8
#define LOWSN_MAX_APSHDR_LENGTH 5

#define LOWSN_MAXHDR_LENGTH (LOWSN_MAX_MACHDR_LENGTH+LOWSN_MAX_NETHDR_LENGTH+LOWSN_MAX_APSHDR_LENGTH)



#define LOWSN_MAX_FRAME_SIZE 127

#define LOWSN_FRAME_TYPE_BEACON 0
#define LOWSN_FRAME_TYPE_DATA 1
#define LOWSN_FRAME_TYPE_ACK 2
#define LOWSN_FRAME_TYPE_MAC 3

//BYTE masks
#define LOWSN_FCF_SECURITY_MASK 0x8
#define LOWSN_FCF_FRAMEPEND_MASK 0x10
#define LOWSN_FCF_ACKREQ_MASK 0x20
#define LOWSN_FCF_INTRAPAN_MASK 0x40



#define LOWSN_SET_FRAME_TYPE(x,f)     (x=x|f)
#define LOWSN_GET_FRAME_TYPE(x)     (x&0x03)

#define LOWSN_SET_SECURITY_ENABLED(x) BITSET(x,3)
#define LOWSN_SET_FRAME_PENDING(x)    BITSET(x,4)
#define LOWSN_SET_ACK_REQUEST(x)      BITSET(x,5)
#define LOWSN_SET_INTRAPAN(x)         BITSET(x,6)

#define LOWSN_CLR_SECURITY_ENABLED(x) BITCLR(x,3)
#define LOWSN_CLR_FRAME_PENDING(x)    BITCLR(x,4)
#define LOWSN_CLR_ACK_REQUEST(x)      BITCLR(x,5)
#define LOWSN_CLR_INTRAPAN(x)         BITCLR(x,6)

#define LOWSN_GET_SECURITY_ENABLED(x) BITTST(x,3)
#define LOWSN_GET_FRAME_PENDING(x)    BITTST(x,4)
#define LOWSN_GET_ACK_REQUEST(x)      BITTST(x,5)
#define LOWSN_GET_INTRAPAN(x)         BITTST(x,6)


#define LOWSN_ADDRMODE_NOADDR 0
#define LOWSN_ADDRMODE_SADDR  2
#define LOWSN_ADDRMODE_LADDR  3

#define LOWSN_GET_DST_ADDR(x) ((x>>2)&0x3)
#define LOWSN_GET_SRC_ADDR(x) ((x>>6)&0x3)
#define LOWSN_SET_DST_ADDR(x,f) (x=x|(f<<2))
#define LOWSN_SET_SRC_ADDR(x,f) (x=x|(f<<6))

#define LOWSN_FCF_DSTMODE_MASK   (0x03<<2)
#define LOWSN_FCF_DSTMODE_NOADDR (LOWSN_ADDRMODE_NOADDR<<2)
#define LOWSN_FCF_DSTMODE_SADDR (LOWSN_ADDRMODE_SADDR<<2)
#define LOWSN_FCF_DSTMODE_LADDR (LOWSN_ADDRMODE_LADDR<<2)

#define LOWSN_FCF_SRCMODE_MASK   (0x03<<6)
#define LOWSN_FCF_SRCMODE_NOADDR (LOWSN_ADDRMODE_NOADDR<<6)
#define LOWSN_FCF_SRCMODE_SADDR (LOWSN_ADDRMODE_SADDR<<6)
#define LOWSN_FCF_SRCMODE_LADDR (LOWSN_ADDRMODE_LADDR<<6)

#define LOWSN_IS_ACK(x) (LOWSN_GET_FRAME_TYPE(x) == LOWSN_FRAME_TYPE_ACK)
#define LOWSN_IS_BCN(x) (LOWSN_GET_FRAME_TYPE(x) == LOWSN_FRAME_TYPE_BEACON)
#define LOWSN_IS_MAC(x) (LOWSN_GET_FRAME_TYPE(x) == LOWSN_FRAME_TYPE_MAC)
#define LOWSN_IS_DATA(x) (LOWSN_GET_FRAME_TYPE(x) == LOWSN_FRAME_TYPE_DATA)

//The ASSOC Req and Rsp are not 802 compatible as more information is
//added to these packets than is in the spec.

#ifdef IEEE_802_COMPLY
#define LOWSN_MACCMD_ASSOC_REQ       0x01
#define LOWSN_MACCMD_ASSOC_RSP       0x02
#else
#define LOWSN_MACCMD_ASSOC_REQ       0x81
#define LOWSN_MACCMD_ASSOC_RSP       0x82
#endif

#define LOWSN_MACCMD_DISASSOC        0x03
#define LOWSN_MACCMD_DATA_REQ        0x04
#define LOWSN_MACCMD_PAN_CONFLICT    0x05
#define LOWSN_MACCMD_ORPHAN          0x06
#define LOWSN_MACCMD_BCN_REQ         0x07
#define LOWSN_MACCMD_COORD_REALIGN   0x08
#define LOWSN_MACCMD_GTS_REQ         0x09

#ifdef IEEE_802_COMPLY
#define LOWSN_MACCMD_ASSOC_REQ_PAYLOAD_LEN 2
#define LOWSN_MACCMD_ASSOC_RSP_PAYLOAD_LEN 4
#else
#define LOWSN_MACCMD_ASSOC_REQ_PAYLOAD_LEN 6  //has four extra bytes in it, 'magic number'
#define LOWSN_MACCMD_ASSOC_RSP_PAYLOAD_LEN 7  //has three extra bytes, shortAddr & depth of parent
#endif

#define LOWSN_MACCMD_COORD_REALIGN_PAYLOAD_LEN 8


//this is only for our beacons
#ifdef LOWSN_ZIGBEE_BEACON_COMPLY
#define LOWSN_ADP_BEACON_SIZE (9+4)    //9 byte payload, 4 byte header
#else
#define LOWSN_ADP_BEACON_SIZE (9+4+4) //add in an extra four-byte magic number
#endif



#define LOWSN_GET_CAPINFO_ALTPAN(x)       BITTST(x,0)
#define LOWSN_GET_CAPINFO_DEVTYPE(x)      BITTST(x,1)
#define LOWSN_GET_CAPINFO_PWRSRC(x)       BITTST(x,2)
#define LOWSN_GET_CAPINFO_RONIDLE(x)      BITTST(x,3)
#define LOWSN_GET_CAPINFO_SECURITY(x)     BITTST(x,6)
#define LOWSN_GET_CAPINFO_ALLOCADDR(x)    BITTST(x,7)

#define LOWSN_SET_CAPINFO_ALTPAN(x)       BITSET(x,0)
#define LOWSN_SET_CAPINFO_DEVTYPE(x)      BITSET(x,1)
#define LOWSN_SET_CAPINFO_PWRSRC(x)       BITSET(x,2)
#define LOWSN_SET_CAPINFO_RONIDLE(x)      BITSET(x,3)
#define LOWSN_SET_CAPINFO_SECURITY(x)     BITSET(x,6)
#define LOWSN_SET_CAPINFO_ALLOCADDR(x)    BITSET(x,7)

#define LOWSN_CLR_CAPINFO_ALTPAN(x)       BITCLR(x,0)
#define LOWSN_CLR_CAPINFO_DEVTYPE(x)      BITCLR(x,1)
#define LOWSN_CLR_CAPINFO_PWRSRC(x)       BITCLR(x,2)
#define LOWSN_CLR_CAPINFO_RONIDLE(x)      BITCLR(x,3)
#define LOWSN_CLR_CAPINFO_SECURITY(x)     BITCLR(x,6)
#define LOWSN_CLR_CAPINFO_ALLOCADDR(x)    BITCLR(x,7)

//BEACON defs
#define LOWSN_BEACON_SF_ASSOC_PERMIT_MASK (1<<7)
#define LOWSN_BEACON_SF_PAN_COORD_MASK    (1<<6)

#define LOWSN_GET_BEACON_SF_ASSOC_PERMIT(x) ( (x) & (LOWSN_BEACON_SF_ASSOC_PERMIT_MASK))


//Association status
#define LOWSN_ASSOC_STATUS_SUCCESS 0
#define LOWSN_ASSOC_STATUS_NOROOM  1
#define LOWSN_ASSOC_STATUS_DENIED  2
#define LOWSN_ASSOC_STATUS_MASK    3

#define LOWSN_GET_ASSOC_STATUS(x) ((x)&LOWSN_ASSOC_STATUS_MASK)





#endif
